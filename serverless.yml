service: ccpsdemographics-v2-api

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  stage: ${opt:stage, 'prod'}
  environment:
    MONGODB_URI: ${env:MONGODB_URI}
  timeout: 10
  stackTags:
    Project: CCPS Demographics API
    Description: Node.js Serverless API for retrieving CCPS school demographic data from MongoDB
    Environment: Production
    ManagedBy: Serverless Framework
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: "*"

package:
  individually: true
  patterns:
    - '!tests/**'
    - '!.git/**'
    - '!.github/**'
    - '!node_modules/mongodb-memory-server/**'
    - '!node_modules/jest/**'
    - '!node_modules/@types/**'
    - '!node_modules/supertest/**'
    - '!**/*.test.js'
    - '!**/*.spec.js'
    - '!coverage/**'
    - '!.env'
    - '!.env.example'
    - '!README.md'

functions:
  getSchools:
    handler: src/handler.getAllSchools
    name: ccpsdemographics-v2-api-getAllSchools
    description: Retrieves all schools from the database
    events:
      - http:
          path: /schools
          method: get
          cors: true
  getSchoolsByYear:
    handler: src/handler.getSchoolsByYear
    name: ccpsdemographics-v2-api-getSchoolsByYear
    description: Retrieves schools filtered by academic year
    events:
      - http:
          path: /schools/year/{academicYear}
          method: get
          cors: true
  getSchoolById:
    handler: src/handler.getSchoolById
    name: ccpsdemographics-v2-api-getSchoolById
    description: Retrieves a specific school by its ID
    events:
      - http:
          path: /schools/{schoolId}
          method: get
          cors: true

plugins:
  - serverless-offline
  - serverless-dotenv-plugin
  - serverless-esbuild

custom:
  esbuild:
    bundle: true
    minify: true
    exclude:
      - '@aws-sdk/*'
      - aws-sdk
